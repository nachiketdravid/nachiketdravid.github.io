{"version":3,"sources":["webpack:///./src/components/project-list.js","webpack:///./src/pages/projects.js","webpack:///./src/components/_shared/styled-separator.js","webpack:///./src/components/tech-list.js","webpack:///./src/components/_shared/styled-headings.js","webpack:///./src/components/_shared/styled-content-link.js","webpack:///./src/components/_shared/styled-text-section.js"],"names":["StyledProject","styled","article","StyledHeader","header","StyledLinkContainer","section","flexEnd","StyledInfoContainer","StyledProjectText","StyledTextSection","ProjectList","projects","map","project","title","frontmatter","demoLink","demo_link","repoLink","repo_link","demoLinkLabel","repoLinkLabel","key","href","target","rel","aria-label","icon","prefix","dangerouslySetInnerHTML","__html","html","techs","StyledProjectsH1","StyledH1","pageQuery","Projects","nodes","data","allMarkdownRemark","console","log","menuLinks","blogMenuLinks","StyledSeparator","div","StyledTechContainer","StyledTag","span","TechList","tech","h1","StyledH2","h2","StyledContentLink","a","contentBox"],"mappings":"knCAUA,IAAMA,EAAgBC,IAAOC,QAAV,KAQbC,EAAeF,IAAOG,OAAV,KAKZC,EAAsBJ,IAAOK,QAAV,IACrBC,KAoBEC,EAAsBP,IAAOK,QAAV,KAMnBG,EAAoBR,YAAOS,IAAPT,CAAH,KA6CRU,EAxCK,SAAC,GACnB,OADoC,EAAfC,SACLC,KAAI,SAACC,GACnB,IAAMC,EAAQD,EAAQE,YAAYD,MAC5BE,EAAWH,EAAQE,YAAYE,UAC/BC,EAAWL,EAAQE,YAAYI,UAC/BC,EAAa,oBAAuBN,EAAvB,QACbO,EAAa,oBAAuBP,EAAvB,QAEnB,OACE,kBAACf,EAAD,CAAeuB,IAAKR,GAClB,kBAACZ,EAAD,KACE,kBAAC,IAAD,CAAmBqB,KAAMP,IAAsBE,GAAsB,KAAKM,OAAO,SAASC,IAAI,YAC5F,kBAAC,IAAD,KAAWX,IAEb,kBAACV,EAAD,KACGc,GACC,uBAAGK,KAAML,EAAUM,OAAO,SAASC,IAAI,WAAWX,MAAM,kBAAkBY,aAAYL,GACpF,kBAAC,IAAD,CAAMM,KAAK,SAASC,OAAO,SAG9BZ,GACC,uBAAGO,KAAMP,EAAUQ,OAAO,SAASC,IAAI,WAAWX,MAAM,YAAYY,aAAYN,GAC9E,kBAAC,IAAD,CAAMO,KAAK,yBAKnB,kBAACpB,EAAD,KACE,kBAACC,EAAD,CAAmBqB,wBAAyB,CAAEC,OAAQjB,EAAQkB,QAC9D,kBAAC,IAAD,CAAUC,MAAOnB,EAAQE,YAAYiB,c,4IC1E/C,IAAMC,EAAmBjC,YAAOkC,IAAPlC,CAAH,KAuBTmC,GAFEC,UAlBE,SAAC,GAIX,IAFkBC,EAEnB,EAHJC,KACEC,kBAAqBF,MAIvB,OADAG,QAAQC,IAAIJ,GAEV,kBAAC,IAAD,CAAQK,UAAWC,KACjB,kBAAC,IAAD,CAAK7B,MAAM,aACX,kBAAC,IAAD,KACE,kBAACmB,EAAD,iBACA,kBAAC,IAAD,MACA,kBAAC,EAAD,CAAatB,SAAU0B,OAQT,e,wPC/Bf,IAAMO,E,UAAkB5C,EAAO6C,IAAV,M,siBCG5B,IAAMC,EAAsB9C,IAAOK,QAAV,KAKnB0C,EAAY/C,IAAOgD,KAAV,KAiCAC,IAjBE,SAAC,GAAe,IAAbjB,EAAY,EAAZA,MAClB,OACE,kBAACc,EAAD,KACGd,EAAMpB,KAAI,SAACsC,GAAD,OACT,kBAACH,EAAD,CAAWzB,IAAK4B,GACd,kBAAC,IAAD,CAAMvB,KAAK,gBACVuB,S,o0BC9BJ,IAAMhB,EAAWlC,IAAOmD,GAAV,KAqBRC,EAAWpD,IAAOqD,GAAV,M,qQCrBd,IAAMC,E,UAAoBtD,EAAOuD,EAAV,M,whBCCvB,IAAM9C,EAAoBT,IAAOK,QAAV,IAE1BmD","file":"component---src-pages-projects-js-1c2862bdf3d548b710fd.js","sourcesContent":["import styled from '@emotion/styled';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport Icon from './icon';\r\nimport TechList from './tech-list';\r\nimport { StyledContentLink } from './_shared/styled-content-link';\r\nimport { StyledH2 } from './_shared/styled-headings';\r\nimport { flexEnd } from './_shared/styled-mixins';\r\nimport { StyledTextSection } from './_shared/styled-text-section';\r\n\r\nconst StyledProject = styled.article`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding-top: 2.5rem;\r\n  width:90%;\r\n  margin: 10px;\r\n`;\r\n\r\nconst StyledHeader = styled.header`\r\n  display: flex;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst StyledLinkContainer = styled.section`\r\n  ${flexEnd};\r\n  margin: 10px 0;\r\n\r\n  & > a {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    color: var(--body-color);\r\n\r\n    &:hover {\r\n      color: var(--primary-color);\r\n    }\r\n  }\r\n\r\n  & svg {\r\n    fill: currentColor;\r\n    margin: 0 0.5rem;\r\n  }\r\n`;\r\n\r\nconst StyledInfoContainer = styled.section`\r\n  display: flex;\r\n  flex-direction: column;\r\n  position: relative;\r\n`;\r\n\r\nconst StyledProjectText = styled(StyledTextSection)`\r\n  \r\n  \r\n`;\r\n\r\nconst ProjectList = ({ projects }) => {\r\n  return projects.map((project) => {\r\n    const title = project.frontmatter.title;\r\n    const demoLink = project.frontmatter.demo_link;\r\n    const repoLink = project.frontmatter.repo_link;\r\n    const demoLinkLabel = `featured project ${title} demo`;\r\n    const repoLinkLabel = `featured project ${title} repo`;\r\n\r\n    return (\r\n      <StyledProject key={title}>\r\n        <StyledHeader>\r\n          <StyledContentLink href={demoLink ? demoLink : repoLink ? repoLink : '#'} target=\"_blank\" rel=\"noopener\">\r\n            <StyledH2>{title}</StyledH2>\r\n          </StyledContentLink>\r\n          <StyledLinkContainer>\r\n            {repoLink && (\r\n              <a href={repoLink} target=\"_blank\" rel=\"noopener\" title=\"Repository Link\" aria-label={repoLinkLabel}>\r\n                <Icon icon=\"github\" prefix=\"fab\" />\r\n              </a>\r\n            )}\r\n            {demoLink && (\r\n              <a href={demoLink} target=\"_blank\" rel=\"noopener\" title=\"Demo Link\" aria-label={demoLinkLabel}>\r\n                <Icon icon=\"external-link-alt\" />\r\n              </a>\r\n            )}\r\n          </StyledLinkContainer>\r\n        </StyledHeader>\r\n        <StyledInfoContainer>\r\n          <StyledProjectText dangerouslySetInnerHTML={{ __html: project.html }} />\r\n          <TechList techs={project.frontmatter.techs} />\r\n        </StyledInfoContainer>\r\n      </StyledProject>\r\n    );\r\n  });\r\n};\r\n\r\nProjectList.propTypes = {\r\n  projects: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default ProjectList;\r\n","import styled from '@emotion/styled';\r\nimport React from 'react';\r\nimport Layout from '../components/layout';\r\nimport ProjectList from '../components/project-list';\r\nimport SEO from '../components/seo';\r\nimport { blogMenuLinks } from '../components/_config/menu-links';\r\nimport { StyledH1 } from '../components/_shared/styled-headings';\r\nimport { StyledFullHeightSection } from '../components/_shared/styled-section';\r\nimport { StyledSeparator } from '../components/_shared/styled-separator';\r\n\r\nconst StyledProjectsH1 = styled(StyledH1)`\r\n  margin-top: 3rem;\r\n`;\r\nconst Projects = ({\r\n  data: {\r\n    allMarkdownRemark: { nodes },\r\n  },\r\n}) => {\r\n  console.log(nodes);\r\n  return (\r\n    <Layout menuLinks={blogMenuLinks}>\r\n      <SEO title=\"Projects\" />\r\n      <StyledFullHeightSection>\r\n        <StyledProjectsH1>Projects</StyledProjectsH1>\r\n        <StyledSeparator />\r\n        <ProjectList projects={nodes} />\r\n      </StyledFullHeightSection>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Projects;\r\n\r\nexport const pageQuery = graphql`\r\n  query {\r\n    allMarkdownRemark(\r\n      sort: { order: DESC, fields: frontmatter___date }\r\n      filter: { fileAbsolutePath: { regex: \"/content/projects/\" }, frontmatter: { featured: { eq: false } } }\r\n    ) {\r\n      nodes {\r\n        frontmatter {\r\n          date(formatString: \"D MMMM, YYYY\")\r\n          title\r\n          repo_link\r\n          demo_link\r\n          techs\r\n        }\r\n        html\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const StyledSeparator = styled.div`\r\n  height: 1px;\r\n  width: 100%;\r\n  margin-top: 3rem;\r\n  background-color: var(--body-color);\r\n`;\r\n","import styled from '@emotion/styled';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport Icon from './icon';\r\n\r\nconst StyledTechContainer = styled.section`\r\n  margin-top: 0.8rem;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n`;\r\nconst StyledTag = styled.span`\r\n  display: flex;\r\n  align-items: center;\r\n  white-space: nowrap;\r\n  font-size: 0.8rem;\r\n\r\n  color: var(--body-color);\r\n  margin: 0 1rem 0.5rem 0;\r\n\r\n  & > svg {\r\n    color: var(--primary-color);\r\n    height: 0.8rem;\r\n    margin-right: 0.25rem;\r\n  }\r\n`;\r\n\r\nconst TechList = ({ techs }) => {\r\n  return (\r\n    <StyledTechContainer>\r\n      {techs.map((tech) => (\r\n        <StyledTag key={tech}>\r\n          <Icon icon=\"caret-right\" />\r\n          {tech}\r\n        </StyledTag>\r\n      ))}\r\n    </StyledTechContainer>\r\n  );\r\n};\r\n\r\nTechList.propTypes = {\r\n  techs: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default TechList;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const StyledH1 = styled.h1`\r\n  width: 100%;\r\n  position: relative;\r\n  font-weight: 800;\r\n  margin: 20px 0;\r\n\r\n  &:first-letter {\r\n    color: var(--primary-color);\r\n  }\r\n\r\n  &:after {\r\n    background-color: var(--primary-color);\r\n    content: '';\r\n    position: absolute;\r\n    top: -30px;\r\n    left: 0;\r\n    width: 30px;\r\n    height: 2px;\r\n  }\r\n`;\r\n\r\nexport const StyledH2 = styled.h2`\r\n  color: var(--title-color);\r\n  margin: 20px 0;\r\n  position: relative;\r\n\r\n  &:after {\r\n    background-color: var(--primary-color);\r\n    content: '';\r\n    position: absolute;\r\n    top: -20px;\r\n    left: 0;\r\n    width: 30px;\r\n    height: 2px;\r\n  }\r\n`;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const StyledContentLink = styled.a`\r\n  text-decoration: none;\r\n\r\n  &:hover > * {\r\n    cursor: pointer;\r\n    color: var(--primary-color);\r\n  }\r\n`;\r\n","import styled from '@emotion/styled';\r\nimport { contentBox } from './styled-mixins';\r\n\r\nexport const StyledTextSection = styled.section`\r\n  white-space: pre-line;\r\n  ${contentBox}\r\n  max-height: 180px;\r\n  padding: 10px;\r\n  max-width : 95%;\r\n  overflow: auto;\r\n\r\n  ::-webkit-scrollbar-track {\r\n    border: 1px solid #000;\r\n    padding: 2px 0;\r\n    background-color: #404040;\r\n  }\r\n\r\n  ::-webkit-scrollbar {\r\n    width: 10px;\r\n    height: 10px;\r\n  }\r\n\r\n  > p {\r\n    margin: 0;\r\n    font-size: 0.8rem;\r\n  }\r\n`;\r\n"],"sourceRoot":""}